plugins {
    id 'java'
//    id 'org.springframework.boot' version '2.7.12'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}
plugins {
    id("com.google.osdetector") version "1.7.1"
}

group = 'com.bdpick'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'


    compileOnly 'org.projectlombok:lombok'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.13.0'

//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.vertx:vertx-mail-client:4.4.5'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // or 'io.jsonwebtoken:jjwt-gson:JJWT_RELEASE_VERSION' for gson

    // object mapping - map struct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // jpa, hibernate
    implementation 'org.hibernate.orm:hibernate-core:6.2.6.Final'
    implementation 'org.hibernate.reactive:hibernate-reactive-core:2.0.4.Final'
//    implementation 'org.hibernate.reactive:hibernate-reactive-core:2.0.5.Final'
    implementation 'io.vertx:vertx-mysql-client:4.4.5'
//    implementation 'cz.encircled:joiner-reactive:0.4.7'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

}

dependencies {
    if (osdetector.classifier == "osx-aarch_64") {
        runtimeOnly("io.netty:netty-resolver-dns-native-macos:4.1.77.Final:${osdetector.classifier}")
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}
